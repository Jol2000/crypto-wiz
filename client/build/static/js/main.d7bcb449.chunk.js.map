{"version":3,"sources":["components/header.js","assets/home-header.svg","components/coin.js","pages/home.js","main.js","components/chart.js","pages/twitter.js","components/footer.js","assets/server-error.svg","pages/servererror.js","assets/404.svg","pages/404.js","App.js","index.js"],"names":["Navbar","path","useLocation","pathname","className","to","class","type","id","Coin","name","image","symbol","price","volume","priceChange","marketCap","background","history","useHistory","src","alt","toLocaleString","toFixed","onClick","row","push","search","state","data","Home","useState","loading","setLoading","setSearch","coins","setCoins","useEffect","axios","get","then","res","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","params","particles","color","value","size","random","anim","enable","speed","size_min","sync","retina_detect","Jumbotron","heroimg","placeholder","onChange","e","target","length","Alert","scope","map","index","current_price","total_volume","lastUpdated","last_updated","price_change_percentage_24h","market_cap","GetSentimentData","route","query","setData","setError","response","getTwitterData","Chart","props","chartData","setChartData","arrayData","distributionData","positive","negative","neutral","labels","datasets","backgroundColor","hoverOffset","borderColor","width","height","options","legend","display","title","text","Twitter","location","coinName","URLSearchParams","pageNumber","setPageNumber","pagesVisited","pageCount","setPageCount","Math","ceil","posts","displayPosts","slice","post","user_profile_img","user","tweet_url","href","rel","tweet_text","fromNow","Date","parse","created_at","replace","sentiment_data","score","comparative","words","word","sort","a","b","averages","all_scores","average_score","style","fontFamily","fontWeight","fontStyle","randomColor","padding","keywords","fontSize","floor","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Footer","ServerError","Button","servererror","PageNotFound","pagenotfound","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7bcb449.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./header.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-white custom-box-shadow p-0\">\r\n      <div className=\"container nav-inner-container\">\r\n        <Link to=\"/\" className=\"d-flex align-items-center text-decoration-none\">\r\n          <h3 class=\"fw-bold m-0\">\r\n            <span class=\"text-black\">Crypto</span>Wizard\r\n          </h3>\r\n        </Link>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0 nav-links h-100\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                to=\"/\"\r\n                className={`nav-link px-3 h-100 d-flex align-items-center ${\r\n                  path === \"/\" ? \"bg-primary text-white\" : \"\"\r\n                }`}\r\n              >\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/home-header.ad703c54.svg\";","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./coin.css\";\r\n\r\nconst Coin = ({\r\n  name,\r\n  image,\r\n  symbol,\r\n  price,\r\n  volume,\r\n  priceChange,\r\n  marketCap,\r\n  background,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <tr className={`${background} border-bottom`}>\r\n      <td>\r\n        <div className=\"d-flex align-items-center\">\r\n          <img className=\"coin-icon\" src={image} alt=\"crypto\" />\r\n          <p>{name}</p>\r\n        </div>\r\n      </td>\r\n\r\n      <td className=\"text-uppercase\">{symbol}</td>\r\n      <td>${price.toLocaleString()}</td>\r\n      <td>${volume.toLocaleString()}</td>\r\n      <td>\r\n        {priceChange < 0 ? (\r\n          <div className=\"d-flex\">\r\n            <p className=\"fw-bold px-2 py-1 bg-dark-red text-light-red rounded\">\r\n              {priceChange.toFixed(2)}%\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"d-flex\">\r\n            <p className=\"fw-bold px-2 py-1 bg-dark-green text-light-green rounded\">\r\n              {priceChange.toFixed(2)}%\r\n            </p>\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>${marketCap.toLocaleString()}</td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={(row) =>\r\n            history.push({\r\n              pathname: `/twitter`,\r\n              search: `?coin=${name}`,\r\n              state: { data: [name, symbol] },\r\n            })\r\n          }\r\n        >\r\n          Sentiment\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Jumbotron, Alert } from \"reactstrap\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\nimport heroimg from \"../assets/home-header.svg\";\r\nimport Coin from \"../components/coin\";\r\nimport Particles from \"react-tsparticles\";\r\n\r\nfunction Home() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [coins, setCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n      )\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const filteredCoins = coins.filter((coin) =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"particles-container\">\r\n        <Particles\r\n          className=\"bg-light particles-bg\"\r\n          params={{\r\n            particles: {\r\n              color: {\r\n                value: \"#CCC\",\r\n              },\r\n              size: {\r\n                value: 30,\r\n                random: false,\r\n                anim: {\r\n                  enable: true,\r\n                  speed: 4,\r\n                  size_min: 10,\r\n                  sync: false,\r\n                },\r\n              },\r\n            },\r\n            retina_detect: false,\r\n          }}\r\n        />\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row align-items-center py-5\">\r\n              <div className=\"col-md-6 text-md-left jumbotron-contents\">\r\n                <h1 className=\"jumbotron-heading fw-bold\">\r\n                  Twitter Sentiment Analysis for <span className=\"text-primary\">Cryptocurrencies</span>\r\n                </h1>\r\n                <p className=\"lead my-3 hero-text\">\r\n                  See what people are tweeting about cryptocurrencies to\r\n                  optimise your investing.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={heroimg}\r\n                  alt=\"Cyptocurrency graphic\"\r\n                ></img>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </div>\r\n\r\n      <div className=\"container custom-box-shadow p-3 my-5\">\r\n        <div className=\"coin-search mb-3 d-flex align-items-center\">\r\n          <form className=\"d-flex justify-content-start\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"p-2 rounded border\"\r\n              name=\"search\"\r\n              placeholder=\"Search..\"\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n\r\n          {(() => {\r\n            if (filteredCoins.length === 0 && loading === false) {\r\n              return (\r\n                <Alert className=\"my-0 mx-3 p-2\" color=\"danger\">\r\n                  No coin matching \"{search}\"\r\n                </Alert>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })()}\r\n        </div>\r\n        {loading === false ? (\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Coin</th>\r\n                <th scope=\"col\">Symbol</th>\r\n                <th scope=\"col\">Buy</th>\r\n                <th scope=\"col\">Volume</th>\r\n                <th scope=\"col\">Price Change</th>\r\n                <th scope=\"col\">Market Cap</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredCoins.map((coin, index) => {\r\n                let background = \"bg-white\";\r\n                if (index % 2 === 1) {\r\n                  background = \"bg-light\";\r\n                }\r\n                return (\r\n                  <Coin\r\n                    key={coin.id}\r\n                    name={coin.name}\r\n                    image={coin.image}\r\n                    symbol={coin.symbol}\r\n                    price={coin.current_price}\r\n                    volume={coin.total_volume}\r\n                    lastUpdated={coin.last_updated}\r\n                    priceChange={coin.price_change_percentage_24h}\r\n                    marketCap={coin.market_cap}\r\n                    background={background}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <ScaleLoader color=\"#0d6efd\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function GetSentimentData(route, query) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (route === \"twitter\") {\r\n      getTwitterData(query)\r\n        .then((data) => {\r\n          setData(data);\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setError(e);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [route]);\r\n\r\n  return {\r\n    loading,\r\n    data,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction getTwitterData(query) {\r\n  return axios(`/sentiment/twitter/${query}`).then(\r\n    (response) => response\r\n  );\r\n}\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction Chart(props) {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  // Make sure data for pie chart is ordered in array as\r\n  // [positive, negative, neutral]\r\n  useEffect(() => {\r\n    let arrayData = [];\r\n    arrayData.push(props.distributionData.positive);\r\n    arrayData.push(props.distributionData.negative);\r\n    arrayData.push(props.distributionData.neutral);\r\n    setChartData(arrayData);\r\n  }, [props.distributionData]);\r\n\r\n  // Format data for chart.js\r\n  const data = {\r\n    labels: [\" Positive\", \" Negative\", \" Neutral\"],\r\n    datasets: [\r\n      {\r\n        data: chartData,\r\n        backgroundColor: [\"#36A2EB\", \"#FF6384\", \"#FDDA83\"],\r\n        hoverOffset: 4,\r\n      },\r\n    ],\r\n    borderColor: \"#fff\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart container my-5\">\r\n      <Pie\r\n        data={data}\r\n        width={3}\r\n        height={3}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: \"Açılan Sandık\" },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport GetSentimentData from \"../main\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\nimport TagCloud from \"react-tag-cloud\";\r\nimport randomColor from \"randomcolor\";\r\nimport PieChart from \"../components/chart\";\r\nimport Moment from 'react-moment';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n\r\nfunction Twitter() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(useLocation().search);\r\n  const coinName = params.get(\"coin\");\r\n\r\n  // Get Twitter data\r\n  const { loading, data, error } = GetSentimentData(\"twitter\", coinName);\r\n  \r\n  // Pagination\r\n  const [pageNumber, setPageNumber] = useState(0);  \r\n\r\n  const postsPerPage = 20;\r\n\r\n  const pagesVisited = pageNumber * postsPerPage;\r\n\r\n  const [pageCount, setPageCount] = useState(0);\r\n  \r\n  // set page count when loading is false\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setPageCount(Math.ceil(data.data?.posts.length / postsPerPage));\r\n    }\r\n  }, [loading, data]);\r\n\r\n  const changePage = ({selected}) => {\r\n    setPageNumber(selected);\r\n  };  \r\n\r\n  const displayPosts = data.data?.posts.slice(pagesVisited, pagesVisited + postsPerPage).map((post, index) => {\r\n    return (\r\n      <div\r\n      className=\"border rounded my-4 p-3 d-flex\"\r\n      key={index}\r\n      >\r\n      <div className=\"d-flex align-items-center flex-column justify-content-center twitter-img-container\">\r\n        <img\r\n          src={post.user_profile_img}\r\n          alt=\"twitter profile\"\r\n          className=\"twitter-image\"\r\n        />\r\n        <p className=\"fw-bold text-center mt-2\">{post.user}</p>\r\n      </div>\r\n      <div class=\"twitter-info-container\">\r\n        <h5 className=\"my-2\">\r\n          <a\r\n            className={`text-decoration-none ${!post.tweet_url ? \"text-black link-disabled\" : \"\"}`}\r\n            href={post.tweet_url ? post.tweet_url : \"#\"}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {post.tweet_text}\r\n          </a>\r\n        </h5>\r\n\r\n        <p className=\"text-capitalize my-2\">\r\n          <b>Posted:</b>{\" \"}\r\n          <span className=\"mx-1\">\r\n             <Moment fromNow>\r\n                { new Date(Date.parse(post.created_at.replace(/( \\+)/, ' UTC$1')))}\r\n            </Moment>\r\n          </span>\r\n        </p>\r\n\r\n        {(() => {\r\n          if (post.sentiment_data.score > 0) {\r\n            return (\r\n              <p className=\"text-capitalize my-2\">\r\n                <b>Type:</b>{\" \"}\r\n                <span className=\"text-success mx-1\">\r\n                  Positive\r\n                </span>\r\n                \r\n              </p>\r\n            );\r\n          } else if (post.sentiment_data.score < 0) {\r\n            return (\r\n              <p className=\"text-capitalize my-2\">\r\n                <b>Type:</b>{\" \"}\r\n                <span className=\"text-danger mx-1\">\r\n                  Negative\r\n                </span>\r\n                \r\n              </p>\r\n            );\r\n          } else {\r\n            return (\r\n              <p className=\"text-capitalize my-2\">\r\n                <b>Type:</b>{\" \"}\r\n                <span className=\"text-muted mx-1\">\r\n                  Neutral\r\n                </span>\r\n                \r\n              </p>\r\n            );\r\n          }\r\n        })()}\r\n\r\n        <p className=\"text-capitalize my-2\">\r\n          <b>Score:</b> {post.sentiment_data.score}\r\n        </p>\r\n        <p className=\"my-2\">\r\n          <b>Comparative Score:</b>{\" \"}\r\n          {post.sentiment_data.comparative}\r\n        </p>\r\n        {post.sentiment_data.words.length > 0 ? (\r\n          <p className=\"my-2\">\r\n            <b>Keywords: </b>\r\n            {post.sentiment_data.words.map((word, index) => (\r\n              <span\r\n                className=\"mx-1 py-2 px-3 rounded bg-light\"\r\n                key={index}\r\n              >\r\n                {word}\r\n              </span>\r\n            ))}\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n    );\r\n  })\r\n\r\n\r\n  if (!loading) {\r\n    data.data?.posts.sort((a, b) => new Date(Date.parse(a.created_at.replace(/( \\+)/, ' UTC$1'))) < new Date(Date.parse(b.created_at.replace(/( \\+)/, ' UTC$1'))) ? 1 : -1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      \r\n      {error === null ? (\r\n        <>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <h1>\r\n              {coinName}{\" \"}\r\n              <span className=\"text-uppercase text-muted\">\r\n                ({location.state.data[1]})\r\n              </span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"row mt-3 mb-5 d-flex justify-content-between\">\r\n            <div className=\"col-3 border py-3 text-center rounded\">\r\n              <p className=\"fw-bold\">Sentiment</p>\r\n              <div className=\"h-75 d-flex justify-content-center align-items-center\">\r\n                {loading === true ? (\r\n                  <ScaleLoader color=\"#0d6efd\" />\r\n                ) : (\r\n                  <PieChart distributionData={data.data?.averages.all_scores} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3 border py-3 text-center rounded\">\r\n              <p className=\"fw-bold\">\r\n                Average Score{\" \"}\r\n                <Link to=\"/about\">\r\n                  <i className=\"fas fa-info-circle\"></i>\r\n                </Link>\r\n              </p>\r\n\r\n              <div className=\"h-75 d-flex justify-content-center align-items-center\">\r\n              {loading === true ? (\r\n                  <ScaleLoader color=\"#0d6efd\" />\r\n                ) : (\r\n                  <h3 className=\"text-muted\">{data.data?.averages.average_score.toFixed(3)}</h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3 border py-3 text-center rounded data-summary\">\r\n              <p className=\"fw-bold p-0 m-0\">Keywords</p>\r\n              {loading === true ? (\r\n                <ScaleLoader color=\"#0d6efd\" />\r\n              ) : (\r\n                <TagCloud\r\n                  style={{\r\n                    fontFamily: \"sans-serif\",\r\n                    fontWeight: \"bold\",\r\n                    fontStyle: \"italic\",\r\n                    color: () => randomColor(),\r\n                    padding: 5,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  {data.data?.averages.keywords.map((word, index) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          fontSize: Math.floor(Math.random() * 20) + 5,\r\n                        }}\r\n                        key={index}\r\n                      >\r\n                        {word}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </TagCloud>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"post-container\">\r\n            <>\r\n              {loading ? (\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                  <ScaleLoader color=\"#0d6efd\" />\r\n                  <h5 className=\"my-3\">Loading Twitter data...</h5>\r\n                </div>\r\n              ) : (\r\n                <div className=\"reddit-posts\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h3>\r\n                      <i className=\"fab fa-twitter text-primary\"></i>\r\n                      <span class=\"mx-2\">\r\n                        Top Twitter posts about {coinName}\r\n                      </span>\r\n                    </h3>\r\n                  </div>\r\n                \r\n                  <div className=\"d-flex justify-content-between\">\r\n\r\n                    <p className=\"my-3 fst-italic\">\r\n                      Showing {postsPerPage} of {\" \"}\r\n                      <span className=\"px-2 mx-1 bg-primary text-white rounded\">\r\n                        {data.data.posts.length}\r\n                      </span>{\" \"}\r\n                      results:\r\n                    </p>\r\n\r\n                    <p className=\"d-flex align-items-center justify-content-center fst-italic\">Page: {pageNumber + 1}</p>\r\n                  </div>\r\n                  \r\n\r\n                  {displayPosts}\r\n                  <ReactPaginate \r\n                  previousLabel=\"Previous\"\r\n                  nextLabel=\"Next\" \r\n                  pageCount={pageCount} \r\n                  onPageChange={changePage}\r\n                  containerClassName=\"paginate-btns\" \r\n                  previousLinkClassName=\"previous-btn\"\r\n                  nextLinkClassName=\"next-btn\"\r\n                  disabledClassName=\"paginate-disabled\"\r\n                  activeClassName=\"paginate-active\" />\r\n                </div>\r\n              )}\r\n            </>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        // Redirect to Server error page\r\n        history.push(\"/503error\")\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Twitter;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"bg-light py-3 border-top\">\r\n      <div className=\"container\">\r\n        <p className=\"my-0\">\r\n          <span class=\"mx-1\">Home</span>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/server-error.b07144f7.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport servererror from \"../assets/server-error.svg\";\r\n\r\nfunction ServerError() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-center my-5\">\r\n        <div className=\"col-md-6\">\r\n          <h2>Internal Server Error</h2>\r\n          <p className=\"my-2\">There was a problem loading the data</p>\r\n          <Link to=\"/\">\r\n            <Button color=\"primary\" className=\"my-2\">\r\n              Back to Home\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <img className=\"img-fluid\" src={servererror} alt=\"pagenotfound\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","export default __webpack_public_path__ + \"static/media/404.9ba286cb.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport pagenotfound from \"../assets/404.svg\";\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-center my-5\">\r\n        <div className=\"col-md-6\">\r\n          <h2>Oh No! Error 404.</h2>\r\n          <p className=\"my-2\">The page your looking for could not be found</p>\r\n          <Link to=\"/\">\r\n            <Button className=\"btn-rounded my-2\" color=\"primary\">\r\n              Back to Home\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <img className=\"img-fluid\" src={pagenotfound} alt=\"pagenotfound\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/header\";\r\nimport Home from \"./pages/home\";\r\nimport Twitter from \"./pages/twitter\";\r\nimport Footer from \"./components/footer\";\r\nimport \"./App.css\";\r\nimport ServerError from \"./pages/servererror\";\r\nimport PageNotFound from \"./pages/404\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/twitter\" component={Twitter}></Route>\r\n        <Route path=\"/503error\" component={ServerError}></Route>\r\n        <Route component={PageNotFound}></Route>\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}